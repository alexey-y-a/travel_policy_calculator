name: Auto PR & Merge

on:
  push:
    branches-ignore:
      - main
  workflow_dispatch:  # Добавляем возможность ручного запуска
    inputs:
      branch_name:
        description: 'Branch name to process'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write
  checks: write
  statuses: write
  actions: write

jobs:
  create-pr:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create-pr.outputs.pr_number }}
    steps:
      - uses: actions/github-script@v6
        id: create-pr
        with:
          script: |
            // Определяем имя ветки в зависимости от типа триггера
            const branchName = '${{ github.event.inputs.branch_name }}' || context.ref.replace('refs/heads/', '');
            
            const prList = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${branchName}`,
              state: 'open'
            });

            let prNumber;
            if (prList.data.length > 0) {
              prNumber = prList.data[0].number;
              console.log(`Найден существующий PR: #${prNumber}`);
            } else {
              const response = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Auto-PR: ${branchName}`,
                head: branchName,
                base: 'main',
                body: 'Автоматически созданный PR'
              });
              prNumber = response.data.number;
              console.log(`Создан новый PR: #${prNumber}`);
            }
            core.setOutput('pr_number', prNumber);

  # Остальные jobs (build и approve-and-merge) остаются без изменений
  build:
    needs: create-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Установка JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      - run: chmod +x ./gradlew
      - run: ./gradlew build
        name: Запуск сборки

  approve-and-merge:
    needs: [create-pr, build]
    runs-on: ubuntu-latest
    steps:
      - name: Обновить статус проверки
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ github.event.pull_request.head.sha || github.sha }}',
              state: 'success',
              context: 'CI / Build',
              description: 'Build succeeded'
            });

      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.BOT_TOKEN }}
          script: |
            const prNumber = ${{ needs.create-pr.outputs.pr_number }};
            
            // Одобрение PR
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              event: 'APPROVE',
              body: 'Автоматическое одобрение'
            });

            // Мерж PR
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber,
              merge_method: 'squash'
            });

            // Удаление ветки
            const branchName = context.ref.replace('refs/heads/', '');
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/' + branchName
            });