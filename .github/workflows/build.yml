name: Java CI with Auto-Merge

on:
  push:
    branches-ignore: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  checks: write  # Добавляем права на управление проверками

jobs:
  create-pr:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Auto-PR: ' + context.ref.replace('refs/heads/', ''),
              head: context.ref.replace('refs/heads/', ''),
              base: 'main',
              body: 'Автоматически созданный PR'
            })

  build:
    needs: create-pr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'
      - run: chmod +x ./gradlew
      - run: ./gradlew build
      - name: Create Status Check
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: context.sha,
              state: 'success',
              context: 'CI / Build',
              description: 'Auto-approved by workflow'
            })

  auto-merge:
    needs: [create-pr, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        with:
          script: |
            // Получаем список PR для этой ветки
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${context.ref.replace('refs/heads/', '')}`,
              state: 'open'
            });
            
            if (prs.length > 0) {
              // Временно отключаем защиту ветки
              await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'main',
                required_status_checks: null,
                enforce_admins: false,
                restrictions: null
              });
            
              // Выполняем мерж
              await github.rest.pulls.merge({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prs[0].number,
                merge_method: 'squash'
              });
            
              // Восстанавливаем защиту
              await github.rest.repos.updateBranchProtection({
                owner: context.repo.owner,
                repo: context.repo.repo,
                branch: 'main',
                required_status_checks: {
                  strict: true,
                  contexts: ['CI / Build']
                },
                enforce_admins: true,
                required_pull_request_reviews: null,
                restrictions: null
              });
            }